import netscape.javascript.JSObject;
import org.json.simple.JSONArray;
import org.json.simple.JSONObject;
import org.json.simple.parser.JSONParser;

import java.io.IOException;
import java.net.HttpURLConnection;
import java.net.URL;
import java.util.Scanner;

public class OracleApp
{
    // fetch weather data at given location
    public static JSObject getWeatherData(String locationName)
    {
        // get location coords using geolocation API
        JSONArray locationData = getLocationData(locationName);

        // extract latitude & longitude from first object (0) (city name)
        JSONObject location = (JSONObject) locationData.get(0);
        double latitude = (double) location.get("latitude");
        double longitude = (double) location.get("longitude");

        // build api request with coordinates


        //todo: return real stuff?
        return null;
    }

    // weather forecast api requires longitude/latitude, use this to convert:
    public static JSONArray getLocationData(String locationName)
    {
        // replace whitespace in location to "+" for API request
        locationName = locationName.replaceAll(" ", "+");

        // building API url
        String urlString = "https://geocoding-api.open-meteo.com/v1/search?name=" + locationName + "&count=10&language=en&format=json";

        try
        {
            // call api
            HttpURLConnection conn = fetchApiResponse(urlString);

            // check response status (200 = success)
            if (conn.getResponseCode() != 200)
            {
                System.out.println("Error: Could not connect to API");
                return null;
            }
            else
            {
                StringBuilder resultJson = new StringBuilder();
                Scanner scanner = new Scanner(conn.getInputStream());

                // read and store json data returned from our request
                while (scanner.hasNext())
                {
                    resultJson.append(scanner.nextLine());
                }

                // close scanner and url connection
                scanner.close();
                conn.disconnect();

                // parse json string into object
                JSONParser parser = new JSONParser();
                JSONObject resultJsonObj = (JSONObject) parser.parse(String.valueOf(resultJson));

                // get list of location data generated by API
                JSONArray locationData = (JSONArray) resultJsonObj.get("results");
                return locationData;

            }
        }catch(Exception e)
        {
            e.printStackTrace();
        }
        //couldn't find location
        System.out.println("1");
        return null;
    }
    private static HttpURLConnection fetchApiResponse(String urlString)
    {
        try
        {
            URL url = new URL(urlString);
            HttpURLConnection conn = (HttpURLConnection) url.openConnection();

            // set reuest method to get
            conn.setRequestMethod("GET");

            //connect to API
            conn.connect();
            return conn;
        }catch (IOException e)
        {
            e.printStackTrace();
        }

        // connection could not be made in this case
        System.out.println("2");
        return null;
    }
}
